{"version":3,"file":"static/js/157.3bb8210b.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport React, { useRef, useEffect, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current\n    });\n  }, [inProp, handleTransition]);\n  useEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.in) {\n          setExited(false);\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish);\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","contains","context","node","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","undefined","Provider","useWindow","useContext","resolveContainerRef","ref","current","getBoundingClientRect","ImperativeTransition","children","inProp","in","onExited","onEntered","transition","useState","exited","setExited","onTransition","useRef","isInitialRef","handleTransition","useEventCallback","useEffect","element","initial","useTransition","options","Promise","resolve","then","combinedRef","useMergedRefs","cloneElement","renderTransition","Component","runTransition","props","_jsx","NoopTransition","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","dialogProps","tabIndex","React","unmountOnExit","mountOnEnter","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","value","classList","baseVal","hasClass","marginProp","qsa","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","defaultProps","ModalHeader","DivStyledAsH4","p","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}